name: Build and Test

on:
  push:
    branches: [main, release-*]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, release-*]

jobs:
  dotnet-build-test:
    name: dotnet tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 6
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build and Test with coverage
        run: >
          dotnet test --no-restore -c Debug
          -l:"trx;LogFileName=../../../TestResults/arithmetic-operations.unit-tests.trx"
          src/Calculator.Services.ArithmeticOperations.Tests/Calculator.Services.ArithmeticOperations.Tests.csproj
          /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="../../TestResults/"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-test-results
          path: TestResults
        if: ${{ always() }}
  web-lint-test:
    name: web lint and tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
      - name: npm package install
        run: npm ci --prefix ./src/Calculator.Web/calculator-app --cache ~/.npm --prefer-offline --no-audit --silent
      - name: web lint
        run: npm run lint --prefix ./src/Calculator.Web/calculator-app
        continue-on-error: true
      - name: web tests
        run: npm run test --prefix ./src/Calculator.Web/calculator-app
      - name: upload web test results
        uses: actions/upload-artifact@v2
        with:
          name: web-test-results
          path: TestResults
        if: ${{ always() }}
  dotnet-format:
    name: dotnet lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: '6.0.x'
      - name: format whitespace
        run: dotnet format whitespace --verify-no-changes
      - name: format style
        run: dotnet format style --verify-no-changes
  spell-check:
    name: spell check  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npx cspell --no-progress "**/*"
  git-leaks:
    name: secrets detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      - uses: zricethezav/gitleaks-action@master
  editorconfig-check:
    name: .editorconfig lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@v1
  contract-testing:
    name: contract tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build api in docker
        run: docker build --no-cache -t calc/arithmetics.api:local -f src/Calculator.Services.ArithmeticOperations/Dockerfile src/
      - name: Run api in docker
        run: docker run -d -p "80:80" --rm --name=api-local-instance-for-contract-testing calc/arithmetics.api:local
      - name: Contract tests
        run: npx dredd contract-tests.arithmetic-api.yml http://localhost -l error
      - run: docker stop api-local-instance-for-contract-testing
      - run: docker rmi calc/arithmetics.api:local
  sonar-cloud:
    name: sonar cloud analysis
    runs-on: ubuntu-latest
    needs:
      - dotnet-build-test
      - web-lint-test
      - spell-check
      - git-leaks
      - editorconfig-check
      - contract-testing
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '15'
      - name: Download api test results
        uses: actions/download-artifact@v2
        with:
          name: dotnet-test-results
      - name: Download web test results
        uses: actions/download-artifact@v2
        with:
          name: web-test-results
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Setup .NET Core SDK 3
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET Core SDK 6
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: '6.0.x'
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"MentorMate_dotnet-containers-template" /o:mentormate
           /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url=https://sonarcloud.io
           /d:sonar.exclusions="**/node_modules/**/*,**/*.ttf,**/*.woff2,**/Scripts/**/*,**/bootstrap*.css"
           /d:sonar.test.inclusions="src/Calculator.Services.ArithmeticOperations.Tests/**/*,**/*.test.ts,**/calculator-e2e/**/*"
           /d:sonar.cs.opencover.reportsPaths="TestResults\coverage.opencover.xml"
           /d:sonar.cs.vstest.reportsPaths="TestResults\arithmetic-operations.unit-tests.trx"
           /d:sonar.testExecutionReportPaths="TestResults\test-report.xml"
           /d:sonar.javascript.lcov.reportPaths="TestResults\lcov.info"
      - name: build dotnet
        run: dotnet build
      - name: publish sonar scanner
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  doc-fx:
    name: documentation wiki
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build Metadata
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: metadata -o .docfx\
      - name: Build Documentation
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: .docs\docfx.json
      - uses: maxheld83/ghpages@master
        name: Publish Documentation on GitHub Pages
        env:
          BUILD_DIR: _site # docfx's default output directory is _site
          GH_PAT: ${{ secrets.GH_PAT }} # See https://github.com/maxheld83/ghpages